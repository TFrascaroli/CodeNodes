{"version":3,"sources":["codenodes.ts"],"names":[],"mappings":";AAAA,2CAAwC;AAGxC;IAKI,mBAAa,KAAsB;QAC/B,IAAI,CAAC,MAAM,GAAG,IAAI,uBAAU,EAAE,CAAC;QAC/B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;IAAA,CAAC;IAEF,0BAAM,GAAN;QACI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;QACrB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;IAC3B,CAAC;IAAA,CAAC;IAEF,wBAAI,GAAJ;QACI,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAAA,CAAC;IAEF,2BAAO,GAAP,UAAS,IAAI,EAAE,IAAI;QACf,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACzB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,QAAQ,IAAI,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAC/F,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,IAAI,GAAG,aAAa,CAAC,CAAC;QAC5D,CAAC;IACL,CAAC;IAAA,CAAC;IACN,gBAAC;AAAD,CA3BA,AA2BC,IAAA;AAED,iBAAS;IACL,SAAS,EAAE,SAAS;CACvB,CAAC","file":"codenodes.js","sourcesContent":["import {NodeCanvas} from \"./nodecanvas\";\r\nimport {ICodeNodesTypes} from \"./ICodeNodesTypes\";\r\n\r\nclass CodeNodes {\r\n    \r\n    private canvas: NodeCanvas;\r\n    private types:ICodeNodesTypes;\r\n\r\n    constructor (types: ICodeNodesTypes) {\r\n        this.canvas = new NodeCanvas();\r\n        this.types = types;\r\n    };\r\n\r\n    getSVG() {\r\n        this.canvas.render();\r\n        return this.canvas.svg;\r\n    };\r\n\r\n    init() {\r\n        this.canvas.init();\r\n    };\r\n\r\n    addNode (name, type) {\r\n        var t = this.types[type];\r\n        if (t) {\r\n            this.canvas.addNode(name, t.builder, t.schema, type, t.clonable || false, t.clone, 10, 10);\r\n        } else {\r\n            console.log(\"There is no type \" + type + \" registered\");\r\n        }\r\n    };\r\n}\r\n\r\nexport = {\r\n    Interface: CodeNodes\r\n};"]}