{"version":3,"sources":["nodeconnector.ts"],"names":[],"mappings":";;AAKA,IAAM,SAAS,GAAG,4BAA4B,CAAC;AAE/C;IAQI,uBAAY,EAAS,EAAE,IAAU;QAC7B,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,eAAe,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;QACxD,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAAA,CAAC;IAEF,+BAAO,GAAP;QACI,IAAI,EAAE,GAAG;YACD,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;YAC5C,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;SACf,EACD,EAAE,GAAG;YACD,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;YAC7C,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;SACf,CAAC;QACN,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5J,CAAC;IAAA,CAAC;IAEF,8BAAM,GAAN;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACZ,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACnD,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACX,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YAC9C,CAAC;YACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACrB,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACZ,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QACpC,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACZ,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC5C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACrB,CAAC;IACL,CAAC;IAAA,CAAC;IAEF,oCAAY,GAAZ,UAAa,KAAK;QACd,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;QAChB,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IACL,oBAAC;AAAD,CAnDA,AAmDC,IAAA;AAnDY,sCAAa","file":"nodeconnector.js","sourcesContent":["import {Node} from \"./node\";\nimport {Point} from \"./point\";\nimport {NodeValue} from \"./nodevalue\";\n\n\nconst namespace = \"http://www.w3.org/2000/svg\";\n\nexport class NodeConnector {\n\n    public end1: Node;\n    public end2: NodeValue;\n    public sp: Point;\n    public ep: Point;\n    public path: SVGPathElement;\n\n    constructor(sp: Point, node: Node) {\n        this.sp = sp;\n        this.ep = sp;\n        this.end1 = node;\n        this.end2 = null;\n\n        this.path = document.createElementNS(namespace, \"path\");\n        this.setPath();\n    };\n\n    setPath() {\n        let c1 = {\n                x: ((this.ep.x - this.sp.x) / 3) + this.sp.x,\n                y: this.sp.y\n            },\n            c2 = {\n                x: -((this.ep.x - this.sp.x) / 3) + this.ep.x,\n                y: this.ep.y\n            };\n        this.path.setAttribute(\"d\", \"M\" + this.sp.x + \",\" + this.sp.y + \" C\" + c1.x + \",\" + c1.y + \" \" + c2.x + \",\" + c2.y + \" \" + this.ep.x + \",\" + this.ep.y);\n    };\n\n    remove() {\n        if (this.end1) {\n            var ind = this.end1.outputConnectors.indexOf(this);\n            if (ind >= 0) {\n                this.end1.outputConnectors.splice(ind, 1);\n            }\n            this.end1 = null;\n        }\n        if (this.end2) {\n            this.end2.inputConnector = null;\n        }\n        if (this.path) {\n            this.path.parentNode.removeChild(this.path);\n            this.path = null;\n        }\n    };\n\n    moveEndPoint(point) {\n        this.ep = point;\n        this.setPath();\n    }\n}"]}